//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Editions = newEditionsTable("public", "editions", "")

type editionsTable struct {
	postgres.Table

	// Columns
	ID        postgres.ColumnInteger
	Name      postgres.ColumnString
	CreatedAt postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type EditionsTable struct {
	editionsTable

	EXCLUDED editionsTable
}

// AS creates new EditionsTable with assigned alias
func (a EditionsTable) AS(alias string) *EditionsTable {
	return newEditionsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new EditionsTable with assigned schema name
func (a EditionsTable) FromSchema(schemaName string) *EditionsTable {
	return newEditionsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new EditionsTable with assigned table prefix
func (a EditionsTable) WithPrefix(prefix string) *EditionsTable {
	return newEditionsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new EditionsTable with assigned table suffix
func (a EditionsTable) WithSuffix(suffix string) *EditionsTable {
	return newEditionsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newEditionsTable(schemaName, tableName, alias string) *EditionsTable {
	return &EditionsTable{
		editionsTable: newEditionsTableImpl(schemaName, tableName, alias),
		EXCLUDED:      newEditionsTableImpl("", "excluded", ""),
	}
}

func newEditionsTableImpl(schemaName, tableName, alias string) editionsTable {
	var (
		IDColumn        = postgres.IntegerColumn("id")
		NameColumn      = postgres.StringColumn("name")
		CreatedAtColumn = postgres.TimestampColumn("created_at")
		allColumns      = postgres.ColumnList{IDColumn, NameColumn, CreatedAtColumn}
		mutableColumns  = postgres.ColumnList{NameColumn, CreatedAtColumn}
	)

	return editionsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		Name:      NameColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
