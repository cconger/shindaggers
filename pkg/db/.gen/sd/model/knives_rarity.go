//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type KnivesRarity string

const (
	KnivesRarity_Uncommon  KnivesRarity = "Uncommon"
	KnivesRarity_Common    KnivesRarity = "Common"
	KnivesRarity_Rare      KnivesRarity = "Rare"
	KnivesRarity_UltraRare KnivesRarity = "Ultra Rare"
	KnivesRarity_SuperRare KnivesRarity = "Super Rare"
)

func (e *KnivesRarity) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "Uncommon":
		*e = KnivesRarity_Uncommon
	case "Common":
		*e = KnivesRarity_Common
	case "Rare":
		*e = KnivesRarity_Rare
	case "Ultra Rare":
		*e = KnivesRarity_UltraRare
	case "Super Rare":
		*e = KnivesRarity_SuperRare
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for KnivesRarity enum")
	}

	return nil
}

func (e KnivesRarity) String() string {
	return string(e)
}
