//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Fights = newFightsTable("sd", "fights", "")

type fightsTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnInteger
	Participants mysql.ColumnString
	Knives       mysql.ColumnString
	Outcomes     mysql.ColumnString
	Event        mysql.ColumnString
	CreatedAt    mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FightsTable struct {
	fightsTable

	NEW fightsTable
}

// AS creates new FightsTable with assigned alias
func (a FightsTable) AS(alias string) *FightsTable {
	return newFightsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FightsTable with assigned schema name
func (a FightsTable) FromSchema(schemaName string) *FightsTable {
	return newFightsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FightsTable with assigned table prefix
func (a FightsTable) WithPrefix(prefix string) *FightsTable {
	return newFightsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FightsTable with assigned table suffix
func (a FightsTable) WithSuffix(suffix string) *FightsTable {
	return newFightsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFightsTable(schemaName, tableName, alias string) *FightsTable {
	return &FightsTable{
		fightsTable: newFightsTableImpl(schemaName, tableName, alias),
		NEW:         newFightsTableImpl("", "new", ""),
	}
}

func newFightsTableImpl(schemaName, tableName, alias string) fightsTable {
	var (
		IDColumn           = mysql.IntegerColumn("id")
		ParticipantsColumn = mysql.StringColumn("participants")
		KnivesColumn       = mysql.StringColumn("knives")
		OutcomesColumn     = mysql.StringColumn("outcomes")
		EventColumn        = mysql.StringColumn("event")
		CreatedAtColumn    = mysql.TimestampColumn("created_at")
		allColumns         = mysql.ColumnList{IDColumn, ParticipantsColumn, KnivesColumn, OutcomesColumn, EventColumn, CreatedAtColumn}
		mutableColumns     = mysql.ColumnList{ParticipantsColumn, KnivesColumn, OutcomesColumn, EventColumn, CreatedAtColumn}
	)

	return fightsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		Participants: ParticipantsColumn,
		Knives:       KnivesColumn,
		Outcomes:     OutcomesColumn,
		Event:        EventColumn,
		CreatedAt:    CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
